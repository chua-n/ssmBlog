<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chuan.ssm.blog.mapper.CommentMapper">

    <resultMap id="commentResultMap" type="comment">
        <id column="comment_id" property="commentId" jdbcType="INTEGER"/>
        <result column="comment_pid" property="commentPid" jdbcType="INTEGER"/>
        <result column="comment_pname" property="commentPname" jdbcType="VARCHAR"/>
        <result column="comment_article_id" property="commentArticleId" jdbcType="INTEGER"/>
        <result column="comment_author_name" property="commentAuthorName" jdbcType="VARCHAR"/>
        <result column="comment_author_email" property="commentAuthorEmail" jdbcType="VARCHAR"/>
        <result column="comment_author_url" property="commentAuthorUrl" jdbcType="VARCHAR"/>
        <result column="comment_author_avatar" property="commentAuthorAvatar" jdbcType="VARCHAR"/>
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR"/>
        <result column="comment_agent" property="commentAgent" jdbcType="VARCHAR"/>
        <result column="comment_ip" property="commentIp" jdbcType="VARCHAR"/>
        <result column="comment_create_time" property="commentCreateTime" jdbcType="TIMESTAMP"/>
        <result column="comment_role" property="commentRole" jdbcType="INTEGER"/>
        <result column="comment_user_id" property="commentUserId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="table">comment</sql>

    <sql id="baseColumnList">
        comment_id
        , comment_pid, comment_pname, comment_article_id, comment_author_name,
    comment_author_email, comment_author_url, comment_author_avatar, comment_content, comment_agent,
     comment_ip,comment_create_time, comment_role, comment_user_id
    </sql>

    <select id="getCommentById" parameterType="java.lang.Integer" resultMap="commentResultMap">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="table"/>
        WHERE comment_id = #{commentId,jdbcType=INTEGER}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM
        <include refid="table"/>
        WHERE comment_id = #{commentId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM
        <include refid="table"/>
        WHERE comment_user_id = #{userId}
    </delete>

    <delete id="deleteByArticleId">
        DELETE FROM
        <include refid="table"/>
        WHERE comment_article_id = #{articleId}
    </delete>

    <insert id="insert" parameterType="comment" useGeneratedKeys="true"
            keyProperty="commentId">
        INSERT INTO
        <include refid="table"/>
        (comment_pid, comment_pname, comment_article_id,
        comment_author_name, comment_author_email,
        comment_author_url, comment_author_avatar, comment_content, comment_agent,
        comment_ip, comment_create_time, comment_role, comment_user_id)
        VALUES (#{commentPid,jdbcType=INTEGER}, #{commentPname,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER},
        #{commentAuthorName,jdbcType=VARCHAR}, #{commentAuthorEmail,jdbcType=VARCHAR},
        #{commentAuthorUrl,jdbcType=VARCHAR},#{commentAuthorAvatar}, #{commentContent,jdbcType=VARCHAR},
        #{commentAgent,jdbcType=VARCHAR},
        #{commentIp,jdbcType=VARCHAR}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentRole,jdbcType=INTEGER},
        #{commentUserId,jdbcType=INTEGER})
    </insert>

    <update id="update" parameterType="comment">
        UPDATE
        <include refid="table"/>
        <set>
            <if test="commentPid != null">comment_pid = #{commentPid,jdbcType=INTEGER},</if>
            <if test="commentPname != null">comment_pname = #{commentPname,jdbcType=VARCHAR},</if>
            <if test="commentArticleId != null">comment_article_id = #{commentArticleId,jdbcType=INTEGER},</if>
            <if test="commentAuthorName != null">comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},</if>
            <if test="commentAuthorEmail != null">comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},</if>
            <if test="commentAuthorUrl != null">comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},</if>
            <if test="commentContent != null">comment_content = #{commentContent,jdbcType=VARCHAR},</if>
            <if test="commentAgent != null">comment_agent = #{commentAgent,jdbcType=VARCHAR},</if>
            <if test="commentIp != null">comment_ip = #{commentIp,jdbcType=VARCHAR},</if>
            <if test="commentCreateTime != null">comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="commentAuthorAvatar != null">comment_author_avatar = #{commentAuthorAvatar},</if>
            <if test="commentRole != null">comment_role = #{commentRole,jdbcType=INTEGER},</if>
            <if test="commentUserId != null">comment_user_id = #{commentUserId,jdbcType=INTEGER},</if>
        </set>
        WHERE comment_id = #{commentId,jdbcType=INTEGER}
    </update>

    <select id="listCommentByArticleId" resultType="comment">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="table"/>
        WHERE
        comment_article_id = #{id}
        ORDER BY comment_id ASC
    </select>

    <!--获取评论列表-->
    <select id="listComment" resultType="comment">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="table"/>
        <where>
            <if test="userId != null">
                comment_user_id = #{userId}
            </if>
        </where>
        ORDER BY comment_id DESC
    </select>

    <select id="getReceiveComment" resultType="comment">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="table"/>
        <where>
            comment_article_id IN (
            <foreach collection="list" item="item" separator=",">
                #{item}
            </foreach>
            )
        </where>
        ORDER BY comment_id DESC
    </select>

    <!--统计评论数-->
    <select id="countComment" resultType="Integer">
        SELECT count(*) FROM
        <include refid="table"/>
    </select>

    <!--获得最近评论，访客的评论-->
    <select id="listRecentComment" resultType="comment">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="table"/>
        <where>
            <if test="userId != null">
                comment_user_id = #{userId}
            </if>
        </where>
        ORDER BY comment_id DESC
        LIMIT #{limit}
    </select>

    <select id="listChildComment" resultType="comment">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="table"/>
        WHERE
        comment_pid=#{id}
    </select>

</mapper>